{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = \"http://localhost:3001\";\nexport async function savePeriod(periodData, setPeriodDataValues, messageBox, setMessage) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/actualSchoolYear/${true}`,\n      method: 'GET'\n    });\n    console.log(response.data.length);\n\n    if (response.data.length !== 0) {\n      const actualSchoolYear = response.data[0];\n      console.log(actualSchoolYear);\n\n      try {\n        const response2 = await axios({\n          url: `${baseUrl}/schoolYears/${actualSchoolYear._id}`,\n          method: 'PUT',\n          data: {\n            actual: false\n          }\n        });\n\n        try {\n          const response3 = await axios({\n            url: `${baseUrl}/schoolYears`,\n            method: 'POST',\n            data: periodData\n          });\n          setMessage({\n            type: 'success',\n            message: 'Año lectivo registrado',\n            isHidden: false\n          });\n        } catch (error) {\n          setMessage({\n            type: 'error',\n            message: 'Hubo problemas al registrar el año lectivo',\n            isHidden: false\n          });\n        }\n\n        setPeriodDataValues({\n          name: '',\n          startDate: new Date(),\n          endDate: new Date()\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        const response3 = await axios({\n          url: `${baseUrl}/schoolYears`,\n          method: 'POST',\n          data: periodData\n        });\n        setMessage({\n          type: 'success',\n          message: 'Año lectivo registrado',\n          isHidden: false\n        });\n        console.log(periodData);\n      } catch (error) {\n        setMessage({\n          type: 'error',\n          message: 'Hubo problemas al registrar el año lectivo',\n          isHidden: false\n        });\n      }\n\n      setPeriodDataValues({\n        name: '',\n        startDate: new Date(),\n        endDate: new Date()\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getActualSchoolYear() {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/actualSchoolYear/${true}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getSchoolYears() {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/schoolYears`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. Código/Codigo_v1.2/frontend/src/services/periodService.js"],"names":["axios","baseUrl","savePeriod","periodData","setPeriodDataValues","messageBox","setMessage","response","url","method","console","log","data","length","actualSchoolYear","response2","_id","actual","response3","type","message","isHidden","error","name","startDate","Date","endDate","getActualSchoolYear","getSchoolYears"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nexport async function savePeriod(periodData, setPeriodDataValues, messageBox, setMessage){\r\n\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/actualSchoolYear/${true}`,\r\n            method: 'GET',\r\n        })\r\n        console.log(response.data.length)\r\n\r\n        if (response.data.length !== 0) {\r\n            const actualSchoolYear = response.data[0];\r\n            console.log(actualSchoolYear);\r\n            try{\r\n                const response2 = await axios({\r\n                    url: `${baseUrl}/schoolYears/${actualSchoolYear._id}`,\r\n                    method: 'PUT',\r\n                    data: {\r\n                        actual: false\r\n                    }\r\n                });\r\n\r\n                try{\r\n                    const response3 = await axios({\r\n                        url: `${baseUrl}/schoolYears`,\r\n                        method: 'POST',\r\n                        data: periodData\r\n                    });\r\n                    setMessage({type: 'success', message: 'Año lectivo registrado', isHidden: false});\r\n                   \r\n            \r\n                }catch(error){\r\n                    setMessage({type: 'error', message: 'Hubo problemas al registrar el año lectivo', isHidden: false})\r\n                }\r\n                setPeriodDataValues({\r\n                    name: '',\r\n                    startDate: new Date(),\r\n                    endDate: new Date()\r\n                });\r\n        \r\n            }catch(error){\r\n                console.log(error);\r\n            }\r\n                      \r\n        }else {\r\n            try{\r\n                const response3 = await axios({\r\n                    url: `${baseUrl}/schoolYears`,\r\n                    method: 'POST',\r\n                    data: periodData\r\n                });\r\n                setMessage({type: 'success', message: 'Año lectivo registrado', isHidden: false});\r\n                console.log(periodData);\r\n        \r\n            }catch(error){\r\n                setMessage({type: 'error', message: 'Hubo problemas al registrar el año lectivo', isHidden: false})\r\n            }\r\n            setPeriodDataValues({\r\n                name: '',\r\n                startDate: new Date(),\r\n                endDate: new Date()\r\n            });\r\n        }\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getActualSchoolYear(){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/actualSchoolYear/${true}`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getSchoolYears(){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/schoolYears`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}