{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = \"https://backend-notas-seven.vercel.app\";\nexport async function saveStudent(studentData, setStudentValues, messageBox, setMessage) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/students`,\n      method: 'POST',\n      data: studentData\n    });\n    setMessage({\n      type: 'success',\n      message: 'Estudiante registrado',\n      isHidden: false\n    });\n  } catch (error) {\n    setMessage({\n      type: 'error',\n      message: 'Hubo problemas al registrar el estudiante',\n      isHidden: false\n    });\n  }\n\n  setStudentValues({\n    name: '',\n    lastName: '',\n    bornYear: '',\n    idCard: '',\n    genre: '',\n    nationality: '',\n    email: '',\n    user: '',\n    password: '',\n    idCourse: ''\n  });\n}\n;\nexport async function saveUser(studentData, messageBox, setMessage) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/users`,\n      method: 'POST',\n      data: {\n        \"email\": studentData.email,\n        \"user\": studentData.user,\n        \"password\": studentData.password,\n        \"type\": 3\n      }\n    });\n    setMessage({\n      type: 'success',\n      message: 'Estudiante registrado',\n      isHidden: false\n    });\n  } catch (error) {\n    setMessage({\n      type: 'error',\n      message: 'Hubo problemas al registrar el estudiante',\n      isHidden: false\n    });\n  }\n}\n;\nexport async function getAllStudents() {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/students`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getNumberStudentsPerCourse(idCourse) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/studentsByCourse/${idCourse}`,\n      method: 'GET'\n    });\n    const numStudents = response.data.length;\n    return numStudents;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getStudentsWithoutCourse() {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/studentsWithoutCourse`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getStudentByUsername(studentUsername) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/studentByUsername/${studentUsername}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getStudentsByCourse(idCourse) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/studentsByCourse/${idCourse}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getStudentById(studentId) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/students/${studentId}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function updateStudent(studentData, setStudentData) {\n  const response = await axios.put(`${baseUrl}/students/${studentData._id}`, {\n    idCourse: studentData.idCourse\n  }).then(response => {\n    window.alert('Asignación realizada con éxito');\n  }).catch(error => {\n    console.log(error);\n  });\n  setStudentData([]);\n  window.location.reload();\n}\n;","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. Código/Codigo_v1.2/frontend/src/services/studentService.js"],"names":["axios","baseUrl","saveStudent","studentData","setStudentValues","messageBox","setMessage","response","url","method","data","type","message","isHidden","error","name","lastName","bornYear","idCard","genre","nationality","email","user","password","idCourse","saveUser","getAllStudents","console","log","getNumberStudentsPerCourse","numStudents","length","getStudentsWithoutCourse","getStudentByUsername","studentUsername","getStudentsByCourse","getStudentById","studentId","updateStudent","setStudentData","put","_id","then","window","alert","catch","location","reload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wCAAhB;AAEA,OAAO,eAAeC,WAAf,CAA2BC,WAA3B,EAAwCC,gBAAxC,EAA0DC,UAA1D,EAAsEC,UAAtE,EAAiF;AACpF,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,WADS;AAEzBQ,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,IAAI,EAAEP;AAHmB,KAAD,CAA5B;AAKAG,IAAAA,UAAU,CAAC;AAACK,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAE,uBAA3B;AAAoDC,MAAAA,QAAQ,EAAE;AAA9D,KAAD,CAAV;AACH,GAPD,CAOC,OAAMC,KAAN,EAAY;AACTR,IAAAA,UAAU,CAAC;AAACK,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAE,2CAAzB;AAAsEC,MAAAA,QAAQ,EAAE;AAAhF,KAAD,CAAV;AACH;;AACDT,EAAAA,gBAAgB,CAAC;AACbW,IAAAA,IAAI,EAAE,EADO;AAEbC,IAAAA,QAAQ,EAAE,EAFG;AAGbC,IAAAA,QAAQ,EAAE,EAHG;AAIbC,IAAAA,MAAM,EAAE,EAJK;AAKbC,IAAAA,KAAK,EAAE,EALM;AAMbC,IAAAA,WAAW,EAAE,EANA;AAObC,IAAAA,KAAK,EAAE,EAPM;AAQbC,IAAAA,IAAI,EAAE,EARO;AASbC,IAAAA,QAAQ,EAAE,EATG;AAUbC,IAAAA,QAAQ,EAAE;AAVG,GAAD,CAAhB;AAYH;AAAA;AAED,OAAO,eAAeC,QAAf,CAAwBtB,WAAxB,EAAqCE,UAArC,EAAiDC,UAAjD,EAA4D;AAE/D,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,QADS;AAEzBQ,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,IAAI,EAAE;AACF,iBAASP,WAAW,CAACkB,KADnB;AAEF,gBAAQlB,WAAW,CAACmB,IAFlB;AAGF,oBAAYnB,WAAW,CAACoB,QAHtB;AAIF,gBAAQ;AAJN;AAHmB,KAAD,CAA5B;AAUAjB,IAAAA,UAAU,CAAC;AAACK,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAE,uBAA3B;AAAoDC,MAAAA,QAAQ,EAAE;AAA9D,KAAD,CAAV;AACH,GAZD,CAYC,OAAMC,KAAN,EAAY;AACTR,IAAAA,UAAU,CAAC;AAACK,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAE,2CAAzB;AAAsEC,MAAAA,QAAQ,EAAE;AAAhF,KAAD,CAAV;AACH;AACJ;AAAA;AAED,OAAO,eAAea,cAAf,GAA+B;AAClC,MAAG;AACC,UAAMnB,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,WADS;AAEzBQ,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAIA,WAAOF,QAAP;AACH,GAND,CAMC,OAAMO,KAAN,EAAY;AACTa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACH;AACJ;AAED,OAAO,eAAee,0BAAf,CAA0CL,QAA1C,EAAmD;AACtD,MAAG;AACC,UAAMjB,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,qBAAoBuB,QAAS,EADpB;AAEzBf,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAIA,UAAMqB,WAAW,GAAGvB,QAAQ,CAACG,IAAT,CAAcqB,MAAlC;AAEA,WAAOD,WAAP;AAEH,GATD,CASC,OAAMhB,KAAN,EAAY;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD;AACJ;AAAA;AAED,OAAO,eAAekB,wBAAf,GAAyC;AAC5C,MAAG;AACC,UAAMzB,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,wBADS;AAEzBQ,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAEH,GARD,CAQC,OAAMO,KAAN,EAAY;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD;AACJ;AAAA;AAED,OAAO,eAAemB,oBAAf,CAAoCC,eAApC,EAAoD;AACvD,MAAG;AACC,UAAM3B,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,sBAAqBiC,eAAgB,EAD5B;AAEzBzB,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAGH,GATD,CASC,OAAMO,KAAN,EAAY;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD;AACJ;AAAA;AAED,OAAO,eAAeqB,mBAAf,CAAmCX,QAAnC,EAA4C;AAC/C,MAAG;AACC,UAAMjB,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,qBAAoBuB,QAAS,EADpB;AAEzBf,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAEH,GARD,CAQC,OAAMO,KAAN,EAAY;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD;AACJ;AAAA;AAED,OAAO,eAAesB,cAAf,CAA8BC,SAA9B,EAAwC;AAC3C,MAAG;AACC,UAAM9B,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBQ,MAAAA,GAAG,EAAG,GAAEP,OAAQ,aAAYoC,SAAU,EADb;AAEzB5B,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAEH,GARD,CAQC,OAAMO,KAAN,EAAY;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD;AACJ;AAAA;AAED,OAAO,eAAewB,aAAf,CAA6BnC,WAA7B,EAA0CoC,cAA1C,EAAyD;AAC5D,QAAMhC,QAAQ,GAAG,MAAMP,KAAK,CAACwC,GAAN,CAAW,GAAEvC,OAAQ,aAAYE,WAAW,CAACsC,GAAI,EAAjD,EAAoD;AACvEjB,IAAAA,QAAQ,EAAErB,WAAW,CAACqB;AADiD,GAApD,EAGtBkB,IAHsB,CAGjBnC,QAAQ,IAAI;AACdoC,IAAAA,MAAM,CAACC,KAAP,CAAa,gCAAb;AAEH,GANsB,EAOtBC,KAPsB,CAOhB/B,KAAK,IAAI;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD,GATsB,CAAvB;AAWAyB,EAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,EAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACH;AAAA","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = \"https://backend-notas-seven.vercel.app\";\r\n\r\nexport async function saveStudent(studentData, setStudentValues, messageBox, setMessage){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/students`,\r\n            method: 'POST',\r\n            data: studentData\r\n        });\r\n        setMessage({type: 'success', message: 'Estudiante registrado', isHidden: false})\r\n    }catch(error){\r\n        setMessage({type: 'error', message: 'Hubo problemas al registrar el estudiante', isHidden: false})\r\n    }\r\n    setStudentValues({\r\n        name: '',\r\n        lastName: '',\r\n        bornYear: '',\r\n        idCard: '',\r\n        genre: '',\r\n        nationality: '',\r\n        email: '',\r\n        user: '',\r\n        password: '',\r\n        idCourse: ''\r\n    });\r\n};\r\n\r\nexport async function saveUser(studentData, messageBox, setMessage){\r\n\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/users`,\r\n            method: 'POST',\r\n            data: {\r\n                \"email\": studentData.email,\r\n                \"user\": studentData.user,\r\n                \"password\": studentData.password,\r\n                \"type\": 3\r\n            }\r\n        });\r\n        setMessage({type: 'success', message: 'Estudiante registrado', isHidden: false})\r\n    }catch(error){\r\n        setMessage({type: 'error', message: 'Hubo problemas al registrar el estudiante', isHidden: false})\r\n    }\r\n};\r\n\r\nexport async function getAllStudents(){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/students`,\r\n            method: 'GET',\r\n        })\r\n        return response\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport async function getNumberStudentsPerCourse(idCourse){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/studentsByCourse/${idCourse}`,\r\n            method: 'GET',\r\n        })\r\n        const numStudents = response.data.length;\r\n\r\n        return numStudents;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getStudentsWithoutCourse(){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/studentsWithoutCourse`,\r\n            method: 'GET',\r\n        })\r\n\r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getStudentByUsername(studentUsername){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/studentByUsername/${studentUsername}`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n        \r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getStudentsByCourse(idCourse){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/studentsByCourse/${idCourse}`,\r\n            method: 'GET',\r\n        })\r\n\r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getStudentById(studentId){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/students/${studentId}`,\r\n            method: 'GET',\r\n        })\r\n\r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function updateStudent(studentData, setStudentData){\r\n    const response = await axios.put(`${baseUrl}/students/${studentData._id}`, {\r\n        idCourse: studentData.idCourse\r\n    })\r\n    .then(response => {\r\n        window.alert('Asignación realizada con éxito');\r\n      \r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    \r\n    setStudentData([]);\r\n    window.location.reload();\r\n};"]},"metadata":{},"sourceType":"module"}