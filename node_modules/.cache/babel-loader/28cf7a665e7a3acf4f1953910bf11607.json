{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elkin\\\\OneDrive\\\\Escritorio\\\\2. C\\xF3digo\\\\Codigo_v1.2\\\\frontend\\\\src\\\\pages\\\\AssignationSubjectToProfessor.js\",\n    _s = $RefreshSig$();\n\nimport Assignation from '../components/FormAssignationSubjectToProfessor';\nimport React from 'react';\nimport NavbarAdmin from '../components/NavbarAdmin';\nimport Cookies from 'universal-cookie/es6';\nimport { useEffect, useState } from 'react';\nimport { getProfessorWithoutSubjects, updateProfessor, getProfessorById } from '../services/professorService';\nimport { getSubjectsByType } from '../services/subjectService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst AssignationSubjectoToProfessor = () => {\n  _s();\n\n  const [professors, setProfessors] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [professor, setProfessor] = useState({});\n  const [id, setId] = useState(\"\");\n  useEffect(() => {\n    async function loadProfessors() {\n      const response = await getProfessorWithoutSubjects();\n\n      if (response.status === 200) {\n        setProfessors(response.data);\n      }\n\n      ;\n    }\n\n    ;\n    loadProfessors();\n  }, []);\n  useEffect(() => {\n    async function loadSubjects() {\n      const response = await getSubjectsByType();\n\n      if (response.status === 200) {\n        setSubjects(response.data);\n      }\n\n      ;\n    }\n\n    ;\n    loadSubjects();\n  }, []);\n  useEffect(() => {\n    async function findProfessor() {\n      const response = await getProfessorById(id);\n\n      if (response.status === 200) {\n        setProfessor(response.data);\n      }\n\n      ;\n    }\n\n    ;\n    findProfessor();\n  }, [id]);\n  useEffect(() => {\n    if (typeof cookies.get('user') === 'undefined' || cookies.get('type', {\n      path: \"/\"\n    }) !== '0') {\n      window.location.href = \"./\";\n    }\n  });\n\n  const handleUpdate = (professorData, setProfessorData) => {\n    updateProfessor(professorData, setProfessorData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Assignation, {\n        handleUpdate: handleUpdate,\n        professors: professors,\n        subjects: subjects,\n        professor: professor,\n        setProfessor: setProfessor,\n        setId: setId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignationSubjectoToProfessor, \"LiArD2ytUBlOM/rto+8dTzIMKF8=\");\n\n_c = AssignationSubjectoToProfessor;\nexport default AssignationSubjectoToProfessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignationSubjectoToProfessor\");","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. CÃ³digo/Codigo_v1.2/frontend/src/pages/AssignationSubjectToProfessor.js"],"names":["Assignation","React","NavbarAdmin","Cookies","useEffect","useState","getProfessorWithoutSubjects","updateProfessor","getProfessorById","getSubjectsByType","cookies","AssignationSubjectoToProfessor","professors","setProfessors","subjects","setSubjects","professor","setProfessor","id","setId","loadProfessors","response","status","data","loadSubjects","findProfessor","get","path","window","location","href","handleUpdate","professorData","setProfessorData"],"mappings":"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","sourcesContent":["import Assignation from '../components/FormAssignationSubjectToProfessor';\r\nimport React from 'react';\r\nimport NavbarAdmin from '../components/NavbarAdmin';\r\nimport Cookies from 'universal-cookie/es6';\r\nimport {useEffect, useState} from 'react';\r\nimport {getProfessorWithoutSubjects, updateProfessor, getProfessorById} from '../services/professorService';\r\nimport {getSubjectsByType} from '../services/subjectService';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst AssignationSubjectoToProfessor = () => {\r\n\r\n    const [professors, setProfessors] = useState([]);\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [professor, setProfessor] = useState({});\r\n    const [id, setId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function loadProfessors() {\r\n            const response = await getProfessorWithoutSubjects();\r\n\r\n            if (response.status === 200) {\r\n                setProfessors(response.data);\r\n                \r\n            };\r\n        };\r\n\r\n        loadProfessors();\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function loadSubjects() {\r\n            const response = await getSubjectsByType();\r\n\r\n            if (response.status === 200) {\r\n                setSubjects(response.data);\r\n                \r\n            };\r\n        };\r\n\r\n        loadSubjects();\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function findProfessor() {\r\n            const response = await getProfessorById(id);\r\n\r\n            if (response.status === 200) {\r\n                setProfessor(response.data);\r\n                \r\n            };\r\n        };\r\n\r\n        findProfessor();\r\n        \r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (typeof cookies.get('user') === 'undefined' || cookies.get('type', {path: \"/\"}) !== '0') {\r\n            window.location.href = \"./\";\r\n        }\r\n    });\r\n\r\n    const handleUpdate = (professorData, setProfessorData) => {\r\n        updateProfessor(professorData, setProfessorData);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <NavbarAdmin /><br/>\r\n            <center>\r\n                <Assignation handleUpdate={handleUpdate} professors={professors} subjects={subjects} professor={professor} setProfessor={setProfessor} setId={setId} />\r\n            </center>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignationSubjectoToProfessor;"]},"metadata":{},"sourceType":"module"}