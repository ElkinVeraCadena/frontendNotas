{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = \"https://backend-notas-seven.vercel.app\";\nexport async function saveSubject(subjectData) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/subjects`,\n      method: 'POST',\n      data: subjectData\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getSubjectsByType() {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/subjectsByType`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getSubjectsByLevel(level) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/subjectsByLevel/${level}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getSubjectsByTypeAndLevel(type, level) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/subjectsByTypeAndLevel/${type}/${level}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getSubjectById(idSubject) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/subjects/${idSubject}`,\n      method: 'GET'\n    });\n    var subjects = [];\n    subjects.push(response.data);\n    response.data = subjects;\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. CÃ³digo/Codigo_v1.2/frontend/src/services/subjectService.js"],"names":["axios","baseUrl","saveSubject","subjectData","response","url","method","data","error","console","log","getSubjectsByType","getSubjectsByLevel","level","getSubjectsByTypeAndLevel","type","getSubjectById","idSubject","subjects","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wCAAhB;AAEA,OAAO,eAAeC,WAAf,CAA2BC,WAA3B,EAAuC;AAE1C,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAAC;AACzBK,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,WADS;AAEzBK,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,IAAI,EAAEJ;AAHmB,KAAD,CAA5B;AAMH,GAPD,CAOC,OAAMK,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AAAA;AAED,OAAO,eAAeG,iBAAf,GAAkC;AACrC,MAAG;AACC,UAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAAC;AACzBK,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,iBADS;AAEzBK,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAEH,GARD,CAQC,OAAMI,KAAN,EAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAED;AACJ;AAAA;AAED,OAAO,eAAeI,kBAAf,CAAkCC,KAAlC,EAAwC;AAC3C,MAAG;AACC,UAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAAC;AACzBK,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,oBAAmBY,KAAM,EADhB;AAEzBP,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAEH,GARD,CAQC,OAAMI,KAAN,EAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAED;AACJ;AAAA;AAED,OAAO,eAAeM,yBAAf,CAAyCC,IAAzC,EAA+CF,KAA/C,EAAqD;AACxD,MAAG;AACC,UAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAAC;AACzBK,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,2BAA0Bc,IAAK,IAAGF,KAAM,EAD/B;AAEzBP,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAEH,GARD,CAQC,OAAMI,KAAN,EAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACJ;AAAA;AAED,OAAO,eAAeQ,cAAf,CAA8BC,SAA9B,EAAwC;AAC3C,MAAG;AACC,UAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAAC;AACzBK,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,aAAYgB,SAAU,EADb;AAEzBX,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAIA,QAAIY,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,CAACC,IAAT,CAAcf,QAAQ,CAACG,IAAvB;AAEAH,IAAAA,QAAQ,CAACG,IAAT,GAAgBW,QAAhB;AAEA,WAAOd,QAAP;AAEH,GAZD,CAYC,OAAMI,KAAN,EAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACJ;AAAA","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = \"https://backend-notas-seven.vercel.app\";\r\n\r\nexport async function saveSubject(subjectData){\r\n\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/subjects`,\r\n            method: 'POST',\r\n            data: subjectData\r\n        });\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport async function getSubjectsByType(){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/subjectsByType`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    \r\n    }\r\n};\r\n\r\nexport async function getSubjectsByLevel(level){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/subjectsByLevel/${level}`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    \r\n    }\r\n};\r\n\r\nexport async function getSubjectsByTypeAndLevel(type, level){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/subjectsByTypeAndLevel/${type}/${level}`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n  \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getSubjectById(idSubject){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/subjects/${idSubject}`,\r\n            method: 'GET',\r\n        })\r\n        var subjects = [];\r\n        subjects.push(response.data);\r\n\r\n        response.data = subjects;\r\n    \r\n        return response;\r\n        \r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}