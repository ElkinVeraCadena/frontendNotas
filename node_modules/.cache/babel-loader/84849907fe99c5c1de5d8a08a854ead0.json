{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = \"http://localhost:3001\";\nexport async function saveGrades(gradesData, setGradesData, setValues, setStudentsValues, setSubjectsValues, setCoursesValues) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/grades`,\n      method: 'POST',\n      data: gradesData\n    });\n    setGradesData([]);\n    setValues({\n      idSubject: '',\n      idCourse: '',\n      quimester: 0\n    });\n    setValues([]);\n    setStudentsValues([]);\n    setSubjectsValues([]);\n    setCoursesValues([]);\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getGradesByCourseSubjectAndQuimester(values) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/gradesByCourseSubjectAndQuimester/${values.idCourse}/${values.idSubject}/${values.quimester}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getGradesByStudentAndQuimester(idStudent, quimester) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/gradesByStudentAndQuimester/${idStudent}/${quimester}`,\n      method: 'GET'\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n;\nexport async function getSubjectsWithoutGrades(idSubject, idCourse, quimester) {\n  try {\n    const response = await axios({\n      url: `${baseUrl}/subjectsWithoutGrades/${idCourse}/${idSubject}/${quimester}`,\n      method: 'GET'\n    });\n\n    if (response.data.length === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function updateGrades(gradesData, setGradesData, idGrade) {\n  console.log(gradesData);\n  const response = await axios.put(`${baseUrl}/grades/${idGrade}`, gradesData).then(response => {\n    console.log('');\n  }).catch(error => {\n    console.log(error);\n  });\n}\n;","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. CÃ³digo/Codigo_v1.2/frontend/src/services/gradesService.js"],"names":["axios","baseUrl","saveGrades","gradesData","setGradesData","setValues","setStudentsValues","setSubjectsValues","setCoursesValues","response","url","method","data","idSubject","idCourse","quimester","error","console","log","getGradesByCourseSubjectAndQuimester","values","getGradesByStudentAndQuimester","idStudent","getSubjectsWithoutGrades","length","updateGrades","idGrade","put","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,eAAeC,UAAf,CAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,SAArD,EAAgEC,iBAAhE,EAAmFC,iBAAnF,EAAsGC,gBAAtG,EAAuH;AAE1H,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,MAAAA,GAAG,EAAG,GAAET,OAAQ,SADS;AAEzBU,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,IAAI,EAAET;AAHmB,KAAD,CAA5B;AAKAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,IAAAA,SAAS,CAAC;AACNQ,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAAD,CAAT;AAKAV,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAC,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAEH,GAjBD,CAiBC,OAAMQ,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AAAA;AAED,OAAO,eAAeG,oCAAf,CAAoDC,MAApD,EAA2D;AAC9D,MAAG;AACC,UAAMX,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,MAAAA,GAAG,EAAG,GAAET,OAAQ,sCAAqCmB,MAAM,CAACN,QAAS,IAAGM,MAAM,CAACP,SAAU,IAAGO,MAAM,CAACL,SAAU,EADpF;AAEzBJ,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AACH,GAPD,CAOC,OAAMO,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AAAA;AAED,OAAO,eAAeK,8BAAf,CAA8CC,SAA9C,EAAyDP,SAAzD,EAAmE;AACtE,MAAG;AACC,UAAMN,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,MAAAA,GAAG,EAAG,GAAET,OAAQ,gCAA+BqB,SAAU,IAAGP,SAAU,EAD7C;AAEzBJ,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;AAKA,WAAOF,QAAP;AAEH,GARD,CAQC,OAAMO,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AAAA;AAED,OAAO,eAAeO,wBAAf,CAAwCV,SAAxC,EAAmDC,QAAnD,EAA6DC,SAA7D,EAAuE;AAC1E,MAAG;AACC,UAAMN,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,MAAAA,GAAG,EAAG,GAAET,OAAQ,0BAAyBa,QAAS,IAAGD,SAAU,IAAGE,SAAU,EADnD;AAEzBJ,MAAAA,MAAM,EAAE;AAFiB,KAAD,CAA5B;;AAKA,QAAIF,QAAQ,CAACG,IAAT,CAAcY,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,aAAO,KAAP;AACH,KAFD,MAEM;AACF,aAAO,IAAP;AACH;AAEJ,GAZD,CAYC,OAAMR,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AAED,OAAO,eAAeS,YAAf,CAA4BtB,UAA5B,EAAwCC,aAAxC,EAAuDsB,OAAvD,EAA+D;AAClET,EAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACA,QAAMM,QAAQ,GAAG,MAAMT,KAAK,CAAC2B,GAAN,CAAW,GAAE1B,OAAQ,WAAUyB,OAAQ,EAAvC,EAA0CvB,UAA1C,EACtByB,IADsB,CACjBnB,QAAQ,IAAI;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACH,GAHsB,EAItBW,KAJsB,CAIhBb,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GANsB,CAAvB;AASH;AAAA","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nexport async function saveGrades(gradesData, setGradesData, setValues, setStudentsValues, setSubjectsValues, setCoursesValues){\r\n\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/grades`,\r\n            method: 'POST',\r\n            data: gradesData\r\n        });\r\n        setGradesData([])\r\n        setValues({\r\n            idSubject: '',\r\n            idCourse: '',\r\n            quimester: 0\r\n        })\r\n        setValues([])\r\n        setStudentsValues([])\r\n        setSubjectsValues([])\r\n        setCoursesValues([])\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport async function getGradesByCourseSubjectAndQuimester(values){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/gradesByCourseSubjectAndQuimester/${values.idCourse}/${values.idSubject}/${values.quimester}`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getGradesByStudentAndQuimester(idStudent, quimester){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/gradesByStudentAndQuimester/${idStudent}/${quimester}`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        return response;\r\n        \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport async function getSubjectsWithoutGrades(idSubject, idCourse, quimester){\r\n    try{\r\n        const response = await axios({\r\n            url: `${baseUrl}/subjectsWithoutGrades/${idCourse}/${idSubject}/${quimester}`,\r\n            method: 'GET',\r\n        })\r\n        \r\n        if (response.data.length === 0) {\r\n            return false;\r\n        }else {\r\n            return true;\r\n        }\r\n\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport async function updateGrades(gradesData, setGradesData, idGrade){\r\n    console.log(gradesData)\r\n    const response = await axios.put(`${baseUrl}/grades/${idGrade}`, gradesData)\r\n    .then(response => {\r\n        console.log('');\r\n    })\r\n    .catch(error => {\r\n        console.log(error)\r\n    });\r\n\r\n    \r\n};\r\n"]},"metadata":{},"sourceType":"module"}