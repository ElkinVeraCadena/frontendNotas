{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elkin\\\\OneDrive\\\\Escritorio\\\\2. C\\xF3digo\\\\Codigo_v1.2\\\\frontend\\\\src\\\\components\\\\ImportData.js\";\nimport Cookies from \"universal-cookie/es6\";\nimport * as XLSX from \"xlsx\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst ImportData = props => {\n  const {\n    title,\n    handleSubmit,\n    values,\n    setValues\n  } = props;\n\n  const readExcel = file => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n    promise.then(d => {\n      console.log(d);\n      setValues(d);\n    });\n  };\n\n  const handleImport = () => {\n    values.map(data => {\n      handleSubmit(data);\n    });\n    window.alert(\"Información registrada con éxito\");\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: \"20px\",\n        width: \"500px\",\n        p: 3,\n        boxShadow: \"1px 1px 5px #333\",\n        marginTop: \"50px\",\n        marginLeft: \"80px\",\n        marginRight: \"80px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        component: \"div\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: e => {\n          const file = e.target.files[0];\n          readExcel(file);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        type: \"submit\",\n        onClick: handleImport,\n        sx: {\n          boxShadow: \"1px 1px 5px #333\",\n          background: \"linear-gradient(to right, #0069c0, #0069c0)\"\n        },\n        children: \"Importar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ImportData;\nexport default ImportData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportData\");","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. Código/Codigo_v1.2/frontend/src/components/ImportData.js"],"names":["Cookies","XLSX","Card","Typography","Button","cookies","ImportData","props","title","handleSubmit","values","setValues","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","d","console","log","handleImport","map","window","alert","location","reload","borderRadius","width","p","boxShadow","marginTop","marginLeft","marginRight","files","background"],"mappings":"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","sourcesContent":["import Cookies from \"universal-cookie/es6\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst ImportData = (props) => {\r\n  const { title, handleSubmit, values, setValues } = props;\r\n\r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n        resolve(data);\r\n      };\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n\r\n    promise.then((d) => {\r\n      console.log(d);\r\n      setValues(d);\r\n    });\r\n  };\r\n\r\n  const handleImport = () => {\r\n    values.map((data) => {\r\n      handleSubmit(data);\r\n    });\r\n    window.alert(\"Información registrada con éxito\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <center>\r\n      <Card\r\n        sx={{\r\n          borderRadius: \"20px\",\r\n          width: \"500px\",\r\n          p: 3,\r\n          boxShadow: \"1px 1px 5px #333\",\r\n          marginTop: \"50px\",\r\n          marginLeft: \"80px\",\r\n          marginRight: \"80px\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n          {title}\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            readExcel(file);\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          onClick={handleImport}\r\n          sx={{\r\n            boxShadow: \"1px 1px 5px #333\",\r\n            background: \"linear-gradient(to right, #0069c0, #0069c0)\",\r\n          }}\r\n        >\r\n          Importar\r\n        </Button>\r\n        <br />\r\n      </Card>\r\n    </center>\r\n  );\r\n};\r\nexport default ImportData;\r\n"]},"metadata":{},"sourceType":"module"}