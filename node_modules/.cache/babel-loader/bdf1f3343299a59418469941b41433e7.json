{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elkin\\\\OneDrive\\\\Escritorio\\\\2. C\\xF3digo\\\\Codigo_v1.2\\\\frontend\\\\src\\\\pages\\\\SeeGradesProfessor.js\",\n    _s = $RefreshSig$();\n\nimport Cookies from \"universal-cookie/es6\";\nimport NavbarProfessor from \"../components/NavbarProfessor\";\nimport TableGradesProfessor from \"../components/TableGradesProfessor\";\nimport TableGradesProfessorPrimary from \"../components/TableGradesProfessorPrimary\";\nimport SchoolYear from \"../components/SchoolYear\";\nimport ModalUpdateGrades from \"../components/ModalUpdateGrades\";\nimport ModalUpdateGradesPrimary from \"../components/ModalUpdateGradesPrimary\";\nimport { getProfessorByUsername } from \"../services/professorService\";\nimport { getCourseById } from \"../services/courseService\";\nimport { getSubjectsByTypeAndLevel, getSubjectById } from \"../services/subjectService\";\nimport { getStudentsByCourse } from \"../services/studentService\";\nimport { getGradesByCourseSubjectAndQuimester, getSubjectsWithoutGrades, updateGrades } from \"../services/gradesService\";\nimport { getActualSchoolYear } from \"../services/periodService\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst SeeGradesProfessor = () => {\n  _s();\n\n  const [gradesValues, setGradesValues] = useState([]);\n  const [professorValues, setProfessorValues] = useState({\n    _id: \"\",\n    name: \"\",\n    lastName: \"\",\n    bornYear: \"\",\n    idCarad: \"\",\n    specialization: \"\",\n    level: \"\",\n    disponibility: \"\",\n    email: cookies.get(\"email\", {\n      path: \"/\"\n    }),\n    user: cookies.get(\"user\", {\n      path: \"/\"\n    }),\n    password: cookies.get(\"password\", {\n      path: \"/\"\n    }),\n    idSubject: \"\",\n    idCourse: []\n  });\n  const [coursesValues, setCoursesValues] = useState([]);\n  const [subjectsValues, setSubjectsValues] = useState([]);\n  const [studentsValues, setStudentsValues] = useState([]);\n  const [values, setValues] = useState({\n    idSubject: \"\",\n    idCourse: \"\",\n    quimester: 0\n  });\n  const [modal, setModal] = useState(false);\n\n  const openModal = () => {\n    setModal(true);\n  };\n\n  const handleUpdate = () => {\n    for (var i = 0; i < gradesValues.length; i++) {\n      const gradeInformation = {\n        grades: gradesValues[i].grades,\n        idStudent: gradesValues[i].idStudent,\n        idProfessor: gradesValues[i].idProfessor,\n        idSubject: gradesValues[i].idSubject,\n        idCourse: gradesValues[i].idCourse,\n        quimester: gradesValues[i].quimester\n      };\n      updateGrades(gradeInformation, setGradesValues, gradesValues[i]._id);\n    }\n\n    window.alert(\"Calificaciones actualizadas\");\n  };\n\n  useEffect(() => {\n    async function loadProfessor() {\n      const response = await getProfessorByUsername(professorValues.user);\n\n      if (response.status === 200) {\n        setProfessorValues(response.data[0]);\n      }\n    }\n\n    loadProfessor();\n  }, []);\n  useEffect(() => {\n    async function loadCourses() {\n      var courses = [];\n\n      for (var i = 0; i < professorValues.idCourse.length; i++) {\n        const response = await getCourseById(professorValues.idCourse[i]);\n        const response2 = await getActualSchoolYear();\n\n        if (response.status === 200) {\n          if (response.data.idSchoolYear === response2.data[0]._id) {\n            courses.push(response.data);\n          }\n        }\n      }\n\n      setCoursesValues(courses);\n    }\n\n    loadCourses();\n  }, [values.quimester]);\n  useEffect(() => {\n    async function loadSubjects() {\n      if (professorValues.idSubject == \"\") {\n        const response = await getSubjectsByTypeAndLevel(0, professorValues.level);\n\n        if (response.status === 200) {\n          const data = response.data;\n          var subjects = [];\n\n          for (var i = 0; i < data.length; i++) {\n            const auxBool = await getSubjectsWithoutGrades(data[i]._id, values.idCourse, values.quimester);\n\n            if (auxBool === true) {\n              subjects.push(data[i]);\n            }\n          }\n\n          setSubjectsValues(subjects);\n        }\n      } else if (professorValues.idSubject != \"\") {\n        const response = await getSubjectById(professorValues.idSubject);\n\n        if (response.status === 200) {\n          const data = response.data;\n          var subjects = [];\n\n          for (var i = 0; i < data.length; i++) {\n            const auxBool = await getSubjectsWithoutGrades(data[i]._id, values.idCourse, values.quimester);\n\n            if (auxBool === true) {\n              subjects.push(data[i]);\n            }\n          }\n\n          setSubjectsValues(subjects);\n        }\n      }\n    }\n\n    loadSubjects();\n  }, [values.idCourse, values.quimester]);\n  useEffect(() => {\n    async function loadStudents() {\n      const response = await getStudentsByCourse(values.idCourse);\n\n      if (response.status === 200) {\n        setStudentsValues(response.data);\n      }\n    }\n\n    loadStudents();\n  }, [values.idCourse]);\n  useEffect(() => {\n    async function loadGrades() {\n      const response = await getGradesByCourseSubjectAndQuimester(values);\n\n      if (response.status === 200) {\n        setGradesValues(response.data);\n      }\n    }\n\n    loadGrades();\n  }, [values]);\n  useEffect(() => {\n    if (typeof cookies.get(\"user\") === \"undefined\" || cookies.get(\"type\", {\n      path: \"/\"\n    }) !== \"2\") {\n      window.location.href = \"./\";\n    }\n  });\n\n  const tableGradesEGB = () => {\n    return /*#__PURE__*/_jsxDEV(TableGradesProfessor, {\n      gradesValues: gradesValues,\n      coursesValues: coursesValues,\n      subjectsValues: subjectsValues,\n      studentsValues: studentsValues,\n      values: values,\n      setValues: setValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  };\n\n  const tableGradesPrimary = () => {\n    return /*#__PURE__*/_jsxDEV(TableGradesProfessorPrimary, {\n      gradesValues: gradesValues,\n      coursesValues: coursesValues,\n      subjectsValues: subjectsValues,\n      studentsValues: studentsValues,\n      values: values,\n      setValues: setValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  };\n\n  const modalUpdateGradesEGB = () => {\n    return /*#__PURE__*/_jsxDEV(ModalUpdateGrades, {\n      handleUpdate: handleUpdate,\n      modal: modal,\n      setModal: setModal,\n      gradesValues: gradesValues,\n      setGradesValues: setGradesValues,\n      studentsValues: studentsValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  };\n\n  const modalUpdateGradesPrimary = () => {\n    return /*#__PURE__*/_jsxDEV(ModalUpdateGradesPrimary, {\n      handleUpdate: handleUpdate,\n      modal: modal,\n      setModal: setModal,\n      gradesValues: gradesValues,\n      setGradesValues: setGradesValues,\n      studentsValues: studentsValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(NavbarProfessor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SchoolYear, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), professorValues.level === \"EGB\" ? tableGradesEGB() : tableGradesPrimary(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      onClick: openModal,\n      sx: {\n        boxShadow: \"1px 1px 5px #333\",\n        background: \"linear-gradient(to right, #0069c0, #0069c0)\",\n        width: \"30%\",\n        marginLeft: \"35%\"\n      },\n      children: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), professorValues.level === \"EGB\" ? modalUpdateGradesEGB() : modalUpdateGradesPrimary()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SeeGradesProfessor, \"W0fYVrDYzOSq3S4Xh/ps9VVkrgo=\");\n\n_c = SeeGradesProfessor;\nexport default SeeGradesProfessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeeGradesProfessor\");","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. CÃ³digo/Codigo_v1.2/frontend/src/pages/SeeGradesProfessor.js"],"names":["Cookies","NavbarProfessor","TableGradesProfessor","TableGradesProfessorPrimary","SchoolYear","ModalUpdateGrades","ModalUpdateGradesPrimary","getProfessorByUsername","getCourseById","getSubjectsByTypeAndLevel","getSubjectById","getStudentsByCourse","getGradesByCourseSubjectAndQuimester","getSubjectsWithoutGrades","updateGrades","getActualSchoolYear","useEffect","useState","Button","cookies","SeeGradesProfessor","gradesValues","setGradesValues","professorValues","setProfessorValues","_id","name","lastName","bornYear","idCarad","specialization","level","disponibility","email","get","path","user","password","idSubject","idCourse","coursesValues","setCoursesValues","subjectsValues","setSubjectsValues","studentsValues","setStudentsValues","values","setValues","quimester","modal","setModal","openModal","handleUpdate","i","length","gradeInformation","grades","idStudent","idProfessor","window","alert","loadProfessor","response","status","data","loadCourses","courses","response2","idSchoolYear","push","loadSubjects","subjects","auxBool","loadStudents","loadGrades","location","href","tableGradesEGB","tableGradesPrimary","modalUpdateGradesEGB","modalUpdateGradesPrimary","boxShadow","background","width","marginLeft"],"mappings":"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","sourcesContent":["import Cookies from \"universal-cookie/es6\";\r\nimport NavbarProfessor from \"../components/NavbarProfessor\";\r\nimport TableGradesProfessor from \"../components/TableGradesProfessor\";\r\nimport TableGradesProfessorPrimary from \"../components/TableGradesProfessorPrimary\";\r\nimport SchoolYear from \"../components/SchoolYear\";\r\nimport ModalUpdateGrades from \"../components/ModalUpdateGrades\";\r\nimport ModalUpdateGradesPrimary from \"../components/ModalUpdateGradesPrimary\";\r\nimport { getProfessorByUsername } from \"../services/professorService\";\r\nimport { getCourseById } from \"../services/courseService\";\r\nimport {\r\n  getSubjectsByTypeAndLevel,\r\n  getSubjectById,\r\n} from \"../services/subjectService\";\r\nimport { getStudentsByCourse } from \"../services/studentService\";\r\nimport {\r\n  getGradesByCourseSubjectAndQuimester,\r\n  getSubjectsWithoutGrades,\r\n  updateGrades,\r\n} from \"../services/gradesService\";\r\nimport { getActualSchoolYear } from \"../services/periodService\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst SeeGradesProfessor = () => {\r\n  const [gradesValues, setGradesValues] = useState([]);\r\n  const [professorValues, setProfessorValues] = useState({\r\n    _id: \"\",\r\n    name: \"\",\r\n    lastName: \"\",\r\n    bornYear: \"\",\r\n    idCarad: \"\",\r\n    specialization: \"\",\r\n    level: \"\",\r\n    disponibility: \"\",\r\n    email: cookies.get(\"email\", { path: \"/\" }),\r\n    user: cookies.get(\"user\", { path: \"/\" }),\r\n    password: cookies.get(\"password\", { path: \"/\" }),\r\n    idSubject: \"\",\r\n    idCourse: [],\r\n  });\r\n  const [coursesValues, setCoursesValues] = useState([]);\r\n  const [subjectsValues, setSubjectsValues] = useState([]);\r\n  const [studentsValues, setStudentsValues] = useState([]);\r\n\r\n  const [values, setValues] = useState({\r\n    idSubject: \"\",\r\n    idCourse: \"\",\r\n    quimester: 0,\r\n  });\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    for (var i = 0; i < gradesValues.length; i++) {\r\n      const gradeInformation = {\r\n        grades: gradesValues[i].grades,\r\n        idStudent: gradesValues[i].idStudent,\r\n        idProfessor: gradesValues[i].idProfessor,\r\n        idSubject: gradesValues[i].idSubject,\r\n        idCourse: gradesValues[i].idCourse,\r\n        quimester: gradesValues[i].quimester,\r\n      };\r\n\r\n      updateGrades(gradeInformation, setGradesValues, gradesValues[i]._id);\r\n    }\r\n    window.alert(\"Calificaciones actualizadas\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function loadProfessor() {\r\n      const response = await getProfessorByUsername(professorValues.user);\r\n\r\n      if (response.status === 200) {\r\n        setProfessorValues(response.data[0]);\r\n      }\r\n    }\r\n\r\n    loadProfessor();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function loadCourses() {\r\n      var courses = [];\r\n\r\n      for (var i = 0; i < professorValues.idCourse.length; i++) {\r\n        const response = await getCourseById(professorValues.idCourse[i]);\r\n        const response2 = await getActualSchoolYear();\r\n\r\n        if (response.status === 200) {\r\n          if (response.data.idSchoolYear === response2.data[0]._id) {\r\n            courses.push(response.data);\r\n          }\r\n        }\r\n      }\r\n\r\n      setCoursesValues(courses);\r\n    }\r\n\r\n    loadCourses();\r\n  }, [values.quimester]);\r\n\r\n  useEffect(() => {\r\n    async function loadSubjects() {\r\n      if (professorValues.idSubject == \"\") {\r\n        const response = await getSubjectsByTypeAndLevel(\r\n          0,\r\n          professorValues.level\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          const data = response.data;\r\n          var subjects = [];\r\n\r\n          for (var i = 0; i < data.length; i++) {\r\n            const auxBool = await getSubjectsWithoutGrades(\r\n              data[i]._id,\r\n              values.idCourse,\r\n              values.quimester\r\n            );\r\n            if (auxBool === true) {\r\n              subjects.push(data[i]);\r\n            }\r\n          }\r\n\r\n          setSubjectsValues(subjects);\r\n        }\r\n      } else if (professorValues.idSubject != \"\") {\r\n        const response = await getSubjectById(professorValues.idSubject);\r\n\r\n        if (response.status === 200) {\r\n          const data = response.data;\r\n          var subjects = [];\r\n\r\n          for (var i = 0; i < data.length; i++) {\r\n            const auxBool = await getSubjectsWithoutGrades(\r\n              data[i]._id,\r\n              values.idCourse,\r\n              values.quimester\r\n            );\r\n            if (auxBool === true) {\r\n              subjects.push(data[i]);\r\n            }\r\n          }\r\n\r\n          setSubjectsValues(subjects);\r\n        }\r\n      }\r\n    }\r\n\r\n    loadSubjects();\r\n  }, [values.idCourse, values.quimester]);\r\n\r\n  useEffect(() => {\r\n    async function loadStudents() {\r\n      const response = await getStudentsByCourse(values.idCourse);\r\n\r\n      if (response.status === 200) {\r\n        setStudentsValues(response.data);\r\n      }\r\n    }\r\n\r\n    loadStudents();\r\n  }, [values.idCourse]);\r\n\r\n  useEffect(() => {\r\n    async function loadGrades() {\r\n      const response = await getGradesByCourseSubjectAndQuimester(values);\r\n\r\n      if (response.status === 200) {\r\n        setGradesValues(response.data);\r\n      }\r\n    }\r\n\r\n    loadGrades();\r\n  }, [values]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      typeof cookies.get(\"user\") === \"undefined\" ||\r\n      cookies.get(\"type\", { path: \"/\" }) !== \"2\"\r\n    ) {\r\n      window.location.href = \"./\";\r\n    }\r\n  });\r\n\r\n  const tableGradesEGB = () => {\r\n    return (\r\n      <TableGradesProfessor\r\n        gradesValues={gradesValues}\r\n        coursesValues={coursesValues}\r\n        subjectsValues={subjectsValues}\r\n        studentsValues={studentsValues}\r\n        values={values}\r\n        setValues={setValues}\r\n      />\r\n    );\r\n  };\r\n\r\n  const tableGradesPrimary = () => {\r\n    return (\r\n      <TableGradesProfessorPrimary\r\n        gradesValues={gradesValues}\r\n        coursesValues={coursesValues}\r\n        subjectsValues={subjectsValues}\r\n        studentsValues={studentsValues}\r\n        values={values}\r\n        setValues={setValues}\r\n      />\r\n    );\r\n  };\r\n\r\n  const modalUpdateGradesEGB = () => {\r\n    return (\r\n      <ModalUpdateGrades\r\n        handleUpdate={handleUpdate}\r\n        modal={modal}\r\n        setModal={setModal}\r\n        gradesValues={gradesValues}\r\n        setGradesValues={setGradesValues}\r\n        studentsValues={studentsValues}\r\n      />\r\n    );\r\n  };\r\n\r\n  const modalUpdateGradesPrimary = () => {\r\n    return (\r\n      <ModalUpdateGradesPrimary\r\n        handleUpdate={handleUpdate}\r\n        modal={modal}\r\n        setModal={setModal}\r\n        gradesValues={gradesValues}\r\n        setGradesValues={setGradesValues}\r\n        studentsValues={studentsValues}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NavbarProfessor />\r\n      <br />\r\n      <SchoolYear />\r\n      {professorValues.level === \"EGB\"\r\n        ? tableGradesEGB()\r\n        : tableGradesPrimary()}\r\n\r\n      <br />\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        onClick={openModal}\r\n        sx={{\r\n          boxShadow: \"1px 1px 5px #333\",\r\n          background: \"linear-gradient(to right, #0069c0, #0069c0)\",\r\n          width: \"30%\",\r\n          marginLeft: \"35%\",\r\n        }}\r\n      >\r\n        Editar\r\n      </Button>\r\n      <br />\r\n\r\n      {professorValues.level === \"EGB\"\r\n        ? modalUpdateGradesEGB()\r\n        : modalUpdateGradesPrimary()}\r\n    </div>\r\n  );\r\n};\r\nexport default SeeGradesProfessor;\r\n"]},"metadata":{},"sourceType":"module"}