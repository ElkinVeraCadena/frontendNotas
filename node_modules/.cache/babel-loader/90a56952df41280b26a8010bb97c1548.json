{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elkin\\\\OneDrive\\\\Escritorio\\\\2. C\\xF3digo\\\\Codigo_v1.2\\\\frontend\\\\src\\\\pages\\\\InsertGrades.js\",\n    _s = $RefreshSig$();\n\nimport Cookies from 'universal-cookie/es6';\nimport NavbarProfessor from '../components/NavbarProfessor';\nimport InsertGradesComponent from '../components/InsertGrades';\nimport SchoolYear from '../components/SchoolYear';\nimport InsertGradesComponentPrimary from '../components/InsertGradesPrimary';\nimport { saveGrades } from '../services/gradesService';\nimport { getProfessorByUsername } from '../services/professorService';\nimport { getCourseById } from '../services/courseService';\nimport { getSubjectsByTypeAndLevel, getSubjectById } from '../services/subjectService';\nimport { getStudentsByCourse } from '../services/studentService';\nimport { getSubjectsWithoutGrades } from '../services/gradesService';\nimport { useEffect, useState } from 'react';\nimport { getActualSchoolYear } from '../services/periodService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst InsertGrades = () => {\n  _s();\n\n  const [gradesValues, setGradesValues] = useState([]);\n  const [professorValues, setProfessorValues] = useState({\n    _id: '',\n    name: '',\n    lastName: '',\n    bornYear: '',\n    idCard: '',\n    specialization: '',\n    level: '',\n    disponibility: '',\n    email: cookies.get('email', {\n      path: \"/\"\n    }),\n    user: cookies.get('user', {\n      path: \"/\"\n    }),\n    password: cookies.get('password', {\n      path: \"/\"\n    }),\n    idSubject: '',\n    idCourse: []\n  });\n  const [coursesValues, setCoursesValues] = useState([]);\n  const [subjectsValues, setSubjectsValues] = useState([]);\n  const [studentsValues, setStudentsValues] = useState([]);\n  const [count, setCount] = useState(0);\n  const [values, setValues] = useState({\n    idSubject: '',\n    idCourse: '',\n    quimester: 0\n  });\n\n  const handleSubmit = () => {\n    for (var i = 0; i < gradesValues.length; i++) {\n      const grades = {\n        lessons: gradesValues[i].lessons,\n        participations: gradesValues[i].participations,\n        homeworks: gradesValues[i].homeworks,\n        project: gradesValues[i].project,\n        exam: gradesValues[i].exam\n      };\n      const gradeInformation = {\n        grades: grades,\n        idStudent: gradesValues[i].idStudent,\n        idProfessor: professorValues._id,\n        idSubject: values.idSubject,\n        idCourse: values.idCourse,\n        quimester: values.quimester\n      };\n      saveGrades(gradeInformation, setGradesValues, setValues, setStudentsValues, setSubjectsValues, setCoursesValues);\n    }\n\n    window.alert(\"Calificaciones registradas\");\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    async function loadProfessor() {\n      const response = await getProfessorByUsername(professorValues.user);\n\n      if (response.status === 200) {\n        setProfessorValues(response.data[0]);\n      }\n    }\n\n    loadProfessor();\n  }, [count]);\n  useEffect(() => {\n    async function loadCourses() {\n      var courses = [];\n\n      for (var i = 0; i < professorValues.idCourse.length; i++) {\n        const response = await getCourseById(professorValues.idCourse[i]);\n        const response2 = await getActualSchoolYear();\n\n        if (response.status === 200) {\n          if (response.data.idSchoolYear === response2.data[0]._id) {\n            courses.push(response.data);\n          }\n        }\n      }\n\n      setCoursesValues(courses);\n    }\n\n    loadCourses();\n  }, [values.quimester]);\n  useEffect(() => {\n    async function loadSubjects() {\n      if (professorValues.idSubject === \"\") {\n        const response = await getSubjectsByTypeAndLevel(0, professorValues.level);\n\n        if (response.status === 200) {\n          const data = response.data;\n          var subjects = [];\n\n          for (var i = 0; i < data.length; i++) {\n            const auxBool = await getSubjectsWithoutGrades(data[i]._id, values.idCourse, values.quimester);\n\n            if (auxBool === false) {\n              subjects.push(data[i]);\n            }\n          }\n\n          setSubjectsValues(subjects);\n        }\n      } else if (professorValues.idSubject !== \"\") {\n        const response = await getSubjectById(professorValues.idSubject);\n\n        if (response.status === 200) {\n          const data = response.data;\n          var subjects = [];\n\n          for (var i = 0; i < data.length; i++) {\n            const auxBool = await getSubjectsWithoutGrades(data[i]._id, values.idCourse, values.quimester);\n\n            if (auxBool === false) {\n              subjects.push(data[i]);\n            }\n          }\n\n          setSubjectsValues(subjects);\n        }\n      }\n    }\n\n    loadSubjects();\n  }, [values.quimester, values.idCourse]);\n  useEffect(() => {\n    async function loadStudents() {\n      const response = await getStudentsByCourse(values.idCourse);\n\n      if (response.status === 200) {\n        setStudentsValues(response.data);\n      }\n    }\n\n    loadStudents();\n  }, [values.idSubject]);\n  useEffect(() => {\n    var gradesInicialization = [];\n\n    for (var i = 0; i < studentsValues.length; i++) {\n      var nameStudent = studentsValues[i].name + \" \" + studentsValues[i].lastName;\n      gradesInicialization.push({\n        idStudent: studentsValues[i]._id,\n        nameStudent: nameStudent,\n        lessons: '',\n        participations: '',\n        homeworks: '',\n        project: '',\n        exam: ''\n      });\n    }\n\n    setGradesValues(gradesInicialization);\n  }, [studentsValues]);\n  useEffect(() => {\n    if (typeof cookies.get('user') === 'undefined' || cookies.get('type', {\n      path: \"/\"\n    }) !== '2') {\n      window.location.href = \"./\";\n    }\n  });\n\n  const tableGradesEGB = () => {\n    return /*#__PURE__*/_jsxDEV(InsertGradesComponent, {\n      handleSubmit: handleSubmit,\n      gradesValues: gradesValues,\n      setGradesValues: setGradesValues,\n      coursesValues: coursesValues,\n      subjectsValues: subjectsValues,\n      values: values,\n      setValues: setValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  };\n\n  const tableGradesPrimary = () => {\n    return /*#__PURE__*/_jsxDEV(InsertGradesComponentPrimary, {\n      handleSubmit: handleSubmit,\n      gradesValues: gradesValues,\n      setGradesValues: setGradesValues,\n      coursesValues: coursesValues,\n      subjectsValues: subjectsValues,\n      values: values,\n      setValues: setValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarProfessor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SchoolYear, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), professorValues.level === \"EGB\" ? tableGradesEGB() : tableGradesPrimary()]\n  }, void 0, true);\n};\n\n_s(InsertGrades, \"0wvcjUwQv6oOGpBCkovTNV4tFMM=\");\n\n_c = InsertGrades;\nexport default InsertGrades;\n\nvar _c;\n\n$RefreshReg$(_c, \"InsertGrades\");","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. CÃ³digo/Codigo_v1.2/frontend/src/pages/InsertGrades.js"],"names":["Cookies","NavbarProfessor","InsertGradesComponent","SchoolYear","InsertGradesComponentPrimary","saveGrades","getProfessorByUsername","getCourseById","getSubjectsByTypeAndLevel","getSubjectById","getStudentsByCourse","getSubjectsWithoutGrades","useEffect","useState","getActualSchoolYear","cookies","InsertGrades","gradesValues","setGradesValues","professorValues","setProfessorValues","_id","name","lastName","bornYear","idCard","specialization","level","disponibility","email","get","path","user","password","idSubject","idCourse","coursesValues","setCoursesValues","subjectsValues","setSubjectsValues","studentsValues","setStudentsValues","count","setCount","values","setValues","quimester","handleSubmit","i","length","grades","lessons","participations","homeworks","project","exam","gradeInformation","idStudent","idProfessor","window","alert","loadProfessor","response","status","data","loadCourses","courses","response2","idSchoolYear","push","loadSubjects","subjects","auxBool","loadStudents","gradesInicialization","nameStudent","location","href","tableGradesEGB","tableGradesPrimary"],"mappings":"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","sourcesContent":["import Cookies from 'universal-cookie/es6';\r\nimport NavbarProfessor from '../components/NavbarProfessor';\r\nimport InsertGradesComponent from '../components/InsertGrades';\r\nimport SchoolYear from '../components/SchoolYear';\r\nimport InsertGradesComponentPrimary from '../components/InsertGradesPrimary';\r\nimport {saveGrades} from '../services/gradesService';\r\nimport {getProfessorByUsername} from '../services/professorService';\r\nimport {getCourseById} from '../services/courseService';\r\nimport {getSubjectsByTypeAndLevel, getSubjectById} from '../services/subjectService';\r\nimport {getStudentsByCourse} from '../services/studentService';\r\nimport {getSubjectsWithoutGrades} from '../services/gradesService';\r\nimport {useEffect, useState} from 'react';\r\nimport { getActualSchoolYear } from '../services/periodService';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst InsertGrades = () => {\r\n\r\n    const [gradesValues, setGradesValues] = useState([]);\r\n    const [professorValues, setProfessorValues] = useState({\r\n        _id: '',\r\n        name: '',\r\n        lastName: '',\r\n        bornYear: '',\r\n        idCard: '',\r\n        specialization: '',\r\n        level: '',\r\n        disponibility: '',\r\n        email: cookies.get('email', {path: \"/\"}),\r\n        user: cookies.get('user', {path: \"/\"}),\r\n        password: cookies.get('password', {path: \"/\"}),\r\n        idSubject: '',\r\n        idCourse: []\r\n    });\r\n    const [coursesValues, setCoursesValues] = useState([]);\r\n    const [subjectsValues, setSubjectsValues] = useState([]);\r\n    const [studentsValues, setStudentsValues] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [values, setValues] = useState({\r\n        idSubject: '',\r\n        idCourse: '',\r\n        quimester: 0\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n        for (var i=0; i<gradesValues.length; i++) {\r\n            const grades = {\r\n                lessons: gradesValues[i].lessons, \r\n                participations: gradesValues[i].participations, \r\n                homeworks: gradesValues[i].homeworks, \r\n                project: gradesValues[i].project, \r\n                exam: gradesValues[i].exam\r\n            }\r\n\r\n            const gradeInformation = {\r\n                grades: grades,\r\n                idStudent: gradesValues[i].idStudent,\r\n                idProfessor: professorValues._id,\r\n                idSubject: values.idSubject,\r\n                idCourse: values.idCourse,\r\n                quimester: values.quimester\r\n            }\r\n\r\n            saveGrades(gradeInformation, setGradesValues, setValues, setStudentsValues, setSubjectsValues, setCoursesValues);\r\n        }\r\n        window.alert(\"Calificaciones registradas\")\r\n        setCount(count + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function loadProfessor() {\r\n            const response = await getProfessorByUsername(professorValues.user);\r\n            if (response.status === 200) {\r\n                setProfessorValues(response.data[0]);   \r\n            }\r\n        }\r\n        loadProfessor();\r\n    }, [count]);\r\n\r\n    useEffect(() => {\r\n        async function loadCourses() {\r\n            var courses = [];\r\n            \r\n            for (var i=0; i<professorValues.idCourse.length; i++) {\r\n                const response = await getCourseById(professorValues.idCourse[i]);  \r\n                const response2 = await getActualSchoolYear();\r\n\r\n                if (response.status === 200) {\r\n                    if (response.data.idSchoolYear === response2.data[0]._id) {\r\n                        courses.push(response.data);                    \r\n                    }\r\n                }\r\n            }\r\n            setCoursesValues(courses);\r\n        }\r\n        loadCourses();\r\n        \r\n    }, [values.quimester]);\r\n\r\n    useEffect(() => {\r\n        async function loadSubjects() {\r\n            \r\n            if (professorValues.idSubject === \"\") {\r\n                const response = await getSubjectsByTypeAndLevel(0, professorValues.level);\r\n                if (response.status === 200) {\r\n                    const data = response.data;\r\n                    var subjects = [];\r\n                    for (var i=0; i<data.length; i++) {\r\n                        const auxBool = await getSubjectsWithoutGrades(data[i]._id, values.idCourse, values.quimester);\r\n                        if (auxBool === false) {\r\n                            subjects.push(data[i]);\r\n                        }\r\n                    }\r\n                    setSubjectsValues(subjects);\r\n                }\r\n\r\n            }else if (professorValues.idSubject !== \"\") {\r\n                const response = await getSubjectById(professorValues.idSubject);\r\n\r\n                if (response.status === 200) {\r\n                    const data = response.data;\r\n                    var subjects = [];\r\n\r\n                    for (var i=0; i<data.length; i++) {\r\n                        const auxBool = await getSubjectsWithoutGrades(data[i]._id, values.idCourse, values.quimester);\r\n                        if (auxBool === false) {\r\n                            subjects.push(data[i]);\r\n                        }\r\n                    }\r\n\r\n                    setSubjectsValues(subjects);\r\n                    \r\n                }\r\n            }            \r\n        }\r\n        loadSubjects();        \r\n    }, [values.quimester, values.idCourse]);\r\n\r\n    useEffect(() => {\r\n        async function loadStudents() {            \r\n            const response = await getStudentsByCourse(values.idCourse);            \r\n            if (response.status === 200) {\r\n                setStudentsValues(response.data);\r\n            }\r\n        }\r\n        loadStudents();        \r\n    }, [values.idSubject]);\r\n\r\n    useEffect(() => {        \r\n        var gradesInicialization = []\r\n        for (var i=0; i<studentsValues.length; i++) {\r\n            var nameStudent = studentsValues[i].name + \" \" + studentsValues[i].lastName\r\n            gradesInicialization.push({\r\n                idStudent: studentsValues[i]._id,\r\n                nameStudent: nameStudent,\r\n                lessons: '',\r\n                participations: '',\r\n                homeworks: '',\r\n                project: '',\r\n                exam: ''\r\n            })\r\n        }\r\n        setGradesValues(gradesInicialization)        \r\n    }, [studentsValues]);\r\n\r\n    useEffect(() => {\r\n        if (typeof cookies.get('user') === 'undefined' || cookies.get('type', {path: \"/\"}) !== '2') {\r\n            window.location.href = \"./\";\r\n        }\r\n    });\r\n\r\n    const tableGradesEGB = () => {\r\n        return (\r\n            <InsertGradesComponent handleSubmit={handleSubmit} gradesValues={gradesValues} setGradesValues={setGradesValues} coursesValues={coursesValues} \r\n            subjectsValues={subjectsValues} values={values} setValues={setValues} />\r\n        );\r\n    };\r\n\r\n    const tableGradesPrimary = () => {\r\n        return (\r\n            <InsertGradesComponentPrimary handleSubmit={handleSubmit} gradesValues={gradesValues} setGradesValues={setGradesValues} coursesValues={coursesValues} \r\n            subjectsValues={subjectsValues} values={values} setValues={setValues} />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavbarProfessor />\r\n            <br />\r\n            <SchoolYear />\r\n\r\n            {\r\n                professorValues.level === \"EGB\"?\r\n                tableGradesEGB():\r\n                tableGradesPrimary()\r\n            }\r\n            \r\n        </> \r\n    );\r\n\r\n};\r\nexport default InsertGrades; "]},"metadata":{},"sourceType":"module"}