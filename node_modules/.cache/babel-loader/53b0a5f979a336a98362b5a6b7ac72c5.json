{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elkin\\\\OneDrive\\\\Escritorio\\\\2. C\\xF3digo\\\\Codigo_v1.2\\\\frontend\\\\src\\\\pages\\\\AssignationStudentToCourse.js\",\n    _s = $RefreshSig$();\n\nimport Assignation from '../components/FormAssignationStudentToCourse';\nimport React from 'react';\nimport NavbarAdmin from '../components/NavbarAdmin';\nimport Cookies from 'universal-cookie/es6';\nimport { useEffect, useState } from 'react';\nimport { getStudentsWithoutCourse, updateStudent, getStudentById } from '../services/studentService';\nimport { getCoursesWithCapacity } from '../services/courseService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst AssignationStudentToCourse = () => {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [student, setStudent] = useState({});\n  const [id, setId] = useState(\"\");\n  useEffect(() => {\n    async function loadStudents() {\n      const response = await getStudentsWithoutCourse();\n\n      if (response.status === 200) {\n        setStudents(response.data);\n      }\n\n      ;\n    }\n\n    ;\n    loadStudents();\n  }, []);\n  useEffect(() => {\n    async function loadCourses() {\n      const response = await getCoursesWithCapacity();\n\n      if (response.status === 200) {\n        var courses = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (response.data[i].idSchoolYear !== \"\") {\n            courses.push(response.data[i]);\n          }\n        }\n\n        setCourses(courses);\n      }\n\n      ;\n    }\n\n    ;\n    loadCourses();\n  }, []);\n  useEffect(() => {\n    async function findStudent() {\n      const response = await getStudentById(id);\n\n      if (response.status === 200) {\n        setStudent(response.data);\n      }\n\n      ;\n    }\n\n    ;\n    findStudent();\n  }, [id]);\n  useEffect(() => {\n    if (typeof cookies.get('user') === 'undefined' || cookies.get('type', {\n      path: \"/\"\n    }) !== '0') {\n      window.location.href = \"./\";\n    }\n  });\n\n  const handleUpdate = (professorData, setProfessorData) => {\n    updateStudent(professorData, setProfessorData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Assignation, {\n        handleUpdate: handleUpdate,\n        students: students,\n        courses: courses,\n        student: student,\n        setStudent: setStudent,\n        setId: setId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignationStudentToCourse, \"rgoP+Vc6en/+/4ygLkjxFlt6jto=\");\n\n_c = AssignationStudentToCourse;\nexport default AssignationStudentToCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignationStudentToCourse\");","map":{"version":3,"sources":["C:/Users/elkin/OneDrive/Escritorio/2. CÃ³digo/Codigo_v1.2/frontend/src/pages/AssignationStudentToCourse.js"],"names":["Assignation","React","NavbarAdmin","Cookies","useEffect","useState","getStudentsWithoutCourse","updateStudent","getStudentById","getCoursesWithCapacity","cookies","AssignationStudentToCourse","students","setStudents","courses","setCourses","student","setStudent","id","setId","loadStudents","response","status","data","loadCourses","i","length","idSchoolYear","push","findStudent","get","path","window","location","href","handleUpdate","professorData","setProfessorData"],"mappings":"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","sourcesContent":["import Assignation from '../components/FormAssignationStudentToCourse';\r\nimport React from 'react';\r\nimport NavbarAdmin from '../components/NavbarAdmin';\r\nimport Cookies from 'universal-cookie/es6';\r\nimport {useEffect, useState} from 'react';\r\nimport {getStudentsWithoutCourse, updateStudent, getStudentById} from '../services/studentService';\r\nimport {getCoursesWithCapacity} from '../services/courseService';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst AssignationStudentToCourse = () => {\r\n\r\n    const [students, setStudents] = useState([]);\r\n    const [courses, setCourses] = useState([]);\r\n    const [student, setStudent] = useState({});\r\n    const [id, setId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function loadStudents() {\r\n            const response = await getStudentsWithoutCourse();\r\n\r\n            if (response.status === 200) {\r\n                setStudents(response.data);\r\n                \r\n            };\r\n        };\r\n\r\n        loadStudents();\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function loadCourses() {\r\n            const response = await getCoursesWithCapacity();\r\n\r\n            if (response.status === 200) {\r\n                var courses = [];\r\n                for (var i=0; i<response.data.length; i++) {\r\n                    if (response.data[i].idSchoolYear !== \"\") {\r\n                        courses.push(response.data[i]);\r\n                    }\r\n                }\r\n                setCourses(courses);\r\n            };\r\n        };\r\n\r\n        loadCourses();\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function findStudent() {\r\n            const response = await getStudentById(id);\r\n\r\n            if (response.status === 200) {\r\n                setStudent(response.data);\r\n            };\r\n        };\r\n\r\n        findStudent();\r\n        \r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (typeof cookies.get('user') === 'undefined' || cookies.get('type', {path: \"/\"}) !== '0') {\r\n            window.location.href = \"./\";\r\n        }\r\n    });\r\n\r\n    const handleUpdate = (professorData, setProfessorData) => {\r\n        updateStudent(professorData, setProfessorData);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <NavbarAdmin /><br/>\r\n            <center>\r\n                <Assignation handleUpdate={handleUpdate} students={students} courses={courses} student={student} setStudent={setStudent} setId={setId} />\r\n            </center>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignationStudentToCourse;"]},"metadata":{},"sourceType":"module"}